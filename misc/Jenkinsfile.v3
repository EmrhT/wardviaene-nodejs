pipeline {
  agent {
    node {
      label 'kubeagent'
    }
  }
stages {
   stage('Preparation') {
     steps {
       script {
         checkout scm
         sh "export GIT_COMMIT=`cat .git/HEAD`"
         }
       }
    }
    stage('Test') {
      steps (nodejs(nodeJSInstallationName: 'nodejs')) {
        sh 'npm install --only=dev'
        sh 'npm test'
      }
    }
    stage('Sonar-Scanner') {
      steps {
        script {
          def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
          withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
            sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=nodejs-test -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=NJ -Dsonar.sources=./index.js -Dsonar.tests=test/ -Dsonar.language=javascript"
          }  
        }
      }
    }
    stage ('Podman Build & Push') {
      steps {
        sh "podman build -t mantislogic/nodejs-test:$GIT_COMMIT ."
        sh "podman login -u mantislogic -p $DOCKERHUB_PASS"
        sh "podman push mantislogic/nodejs-test:$GIT_COMMIT"
      }
    }
    stage ('Deploy to K8S Test Namespace') {
      steps {
        withCredentials([file(credentialsId: 'afa1a7c1-5e6c-4d9b-82cb-4293f5c144a3', variable: 'KUBECRED')]) {
          sh 'mkdir ~/.kube'
          sh 'cat $KUBECRED > ~/.kube/config'
          sh 'cat deployment.yaml | sed "s/{{GIT_COMMIT}}/$GIT_COMMIT/g" | kubectl apply -f -'
        }
      }
    }
  }
}
