pipeline {
  agent {
    node {
      label 'kubeagent'
    }
  }
stages {
   stage('Preparation') {
     steps {
       script {
         checkout scm
         sh "export GIT_COMMIT=`cat .git/HEAD`"
         }
       }
    }
    stage('test') {
      steps (nodejs(nodeJSInstallationName: 'nodejs')) {
        sh 'npm install --only=dev'
        sh 'npm test'
      }
    }
    stage ('Deploy to Test1') {
      steps {
        withCredentials([file(credentialsId: 'afa1a7c1-5e6c-4d9b-82cb-4293f5c144a3', variable: 'HASAN')]) {
          sh 'echo $HASAN'
          sh 'mkdir ~/.kube'
          sh 'export $KUBECRED'
          sh 'sleep 99999'
          sh 'cat $KUBECRED > ~/.kube/config'
          sh 'cat deployment.yaml | sed "s/{{GIT_COMMIT}}/$GIT_COMMIT/g" | kubectl apply -f -'
        }
      }
    }
    stage ('podman build/push') {
      steps {
        sh "podman build -t mantislogic/nodejs-test:$GIT_COMMIT ."
        sh "podman login -u mantislogic -p $DOCKERHUB_PASS"
        sh "podman push mantislogic/nodejs-test:$GIT_COMMIT"
      }
    }
    stage ('Deploy to Test') {
      steps {
        withCredentials([file(credentialsId: 'afa1a7c1-5e6c-4d9b-82cb-4293f5c144a3', variable: 'KUBECRED')]) {
          sh 'cat $KUBECRED > ~/.kube/config'
          sh 'cat deployment.yaml | sed "s/{{GIT_COMMIT}}/$GIT_COMMIT/g" | kubectl apply -f -'
        }
      }
    }
  }
}
